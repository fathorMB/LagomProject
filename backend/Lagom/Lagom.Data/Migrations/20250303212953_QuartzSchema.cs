using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Lagom.Data.Migrations
{
    /// <inheritdoc />
    public partial class QuartzSchema : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // Execute raw SQL commands to create or modify schema
            migrationBuilder.Sql("CREATE TABLE [dbo].[QRTZ_CALENDARS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [CALENDAR_NAME] nvarchar(200) NOT NULL,\r\n  [CALENDAR] varbinary(max) NOT NULL\r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_CRON_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [CRON_EXPRESSION] nvarchar(120) NOT NULL,\r\n  [TIME_ZONE_ID] nvarchar(80) \r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_FIRED_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [ENTRY_ID] nvarchar(140) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [INSTANCE_NAME] nvarchar(200) NOT NULL,\r\n  [FIRED_TIME] bigint NOT NULL,\r\n  [SCHED_TIME] bigint NOT NULL,\r\n  [PRIORITY] int NOT NULL,\r\n  [STATE] nvarchar(16) NOT NULL,\r\n  [JOB_NAME] nvarchar(150) NULL,\r\n  [JOB_GROUP] nvarchar(150) NULL,\r\n  [IS_NONCONCURRENT] bit NULL,\r\n  [REQUESTS_RECOVERY] bit NULL \r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL \r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_SCHEDULER_STATE] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [INSTANCE_NAME] nvarchar(200) NOT NULL,\r\n  [LAST_CHECKIN_TIME] bigint NOT NULL,\r\n  [CHECKIN_INTERVAL] bigint NOT NULL\r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_LOCKS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [LOCK_NAME] nvarchar(40) NOT NULL \r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_JOB_DETAILS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [JOB_NAME] nvarchar(150) NOT NULL,\r\n  [JOB_GROUP] nvarchar(150) NOT NULL,\r\n  [DESCRIPTION] nvarchar(250) NULL,\r\n  [JOB_CLASS_NAME] nvarchar(250) NOT NULL,\r\n  [IS_DURABLE] bit NOT NULL,\r\n  [IS_NONCONCURRENT] bit NOT NULL,\r\n  [IS_UPDATE_DATA] bit NOT NULL,\r\n  [REQUESTS_RECOVERY] bit NOT NULL,\r\n  [JOB_DATA] varbinary(max) NULL\r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [REPEAT_COUNT] int NOT NULL,\r\n  [REPEAT_INTERVAL] bigint NOT NULL,\r\n  [TIMES_TRIGGERED] int NOT NULL\r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [STR_PROP_1] nvarchar(512) NULL,\r\n  [STR_PROP_2] nvarchar(512) NULL,\r\n  [STR_PROP_3] nvarchar(512) NULL,\r\n  [INT_PROP_1] int NULL,\r\n  [INT_PROP_2] int NULL,\r\n  [LONG_PROP_1] bigint NULL,\r\n  [LONG_PROP_2] bigint NULL,\r\n  [DEC_PROP_1] numeric(13,4) NULL,\r\n  [DEC_PROP_2] numeric(13,4) NULL,\r\n  [BOOL_PROP_1] bit NULL,\r\n  [BOOL_PROP_2] bit NULL,\r\n  [TIME_ZONE_ID] nvarchar(80) NULL \r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_BLOB_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [BLOB_DATA] varbinary(max) NULL\r\n);\r\n\r\nCREATE TABLE [dbo].[QRTZ_TRIGGERS] (\r\n  [SCHED_NAME] nvarchar(120) NOT NULL,\r\n  [TRIGGER_NAME] nvarchar(150) NOT NULL,\r\n  [TRIGGER_GROUP] nvarchar(150) NOT NULL,\r\n  [JOB_NAME] nvarchar(150) NOT NULL,\r\n  [JOB_GROUP] nvarchar(150) NOT NULL,\r\n  [DESCRIPTION] nvarchar(250) NULL,\r\n  [NEXT_FIRE_TIME] bigint NULL,\r\n  [PREV_FIRE_TIME] bigint NULL,\r\n  [PRIORITY] int NULL,\r\n  [TRIGGER_STATE] nvarchar(16) NOT NULL,\r\n  [TRIGGER_TYPE] nvarchar(8) NOT NULL,\r\n  [START_TIME] bigint NOT NULL,\r\n  [END_TIME] bigint NULL,\r\n  [CALENDAR_NAME] nvarchar(200) NULL,\r\n  [MISFIRE_INSTR] int NULL,\r\n  [JOB_DATA] varbinary(max) NULL\r\n);\r\nALTER TABLE [dbo].[QRTZ_CALENDARS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_CALENDARS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [CALENDAR_NAME]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_CRON_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_FIRED_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_FIRED_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [ENTRY_ID]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_PAUSED_TRIGGER_GRPS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_SCHEDULER_STATE] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_SCHEDULER_STATE] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [INSTANCE_NAME]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_LOCKS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_LOCKS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [LOCK_NAME]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_JOB_DETAILS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_JOB_DETAILS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [JOB_NAME],\r\n    [JOB_GROUP]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_SIMPLE_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_SIMPROP_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_BLOB_TRIGGERS] WITH NOCHECK ADD\r\n  CONSTRAINT [PK_QRTZ_BLOB_TRIGGERS] PRIMARY KEY  CLUSTERED\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  );\r\nALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) ON DELETE CASCADE;\r\nALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\r\n  (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) ON DELETE CASCADE;\r\nALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY\r\n  (\r\n\t[SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_TRIGGERS] (\r\n    [SCHED_NAME],\r\n    [TRIGGER_NAME],\r\n    [TRIGGER_GROUP]\r\n  ) ON DELETE CASCADE;\r\nALTER TABLE [dbo].[QRTZ_TRIGGERS] ADD\r\n  CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS] FOREIGN KEY\r\n  (\r\n    [SCHED_NAME],\r\n    [JOB_NAME],\r\n    [JOB_GROUP]\r\n  ) REFERENCES [dbo].[QRTZ_JOB_DETAILS] (\r\n    [SCHED_NAME],\r\n    [JOB_NAME],\r\n    [JOB_GROUP]\r\n  );\r\n-- Create indexes\r\nCREATE INDEX [IDX_QRTZ_T_G_J]                 ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, JOB_GROUP, JOB_NAME);\r\nCREATE INDEX [IDX_QRTZ_T_C]                   ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, CALENDAR_NAME);\r\n\r\nCREATE INDEX [IDX_QRTZ_T_N_G_STATE]           ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_STATE]               ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_N_STATE]             ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_NEXT_FIRE_TIME]      ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, NEXT_FIRE_TIME);\r\nCREATE INDEX [IDX_QRTZ_T_NFT_ST]              ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);\r\nCREATE INDEX [IDX_QRTZ_T_NFT_ST_MISFIRE]      ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);\r\nCREATE INDEX [IDX_QRTZ_T_NFT_ST_MISFIRE_GRP]  ON [dbo].[QRTZ_TRIGGERS](SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);\r\n\r\nCREATE INDEX [IDX_QRTZ_FT_INST_JOB_REQ_RCVRY] ON [dbo].[QRTZ_FIRED_TRIGGERS](SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);\r\nCREATE INDEX [IDX_QRTZ_FT_G_J]                ON [dbo].[QRTZ_FIRED_TRIGGERS](SCHED_NAME, JOB_GROUP, JOB_NAME);\r\nCREATE INDEX [IDX_QRTZ_FT_G_T]                ON [dbo].[QRTZ_FIRED_TRIGGERS](SCHED_NAME, TRIGGER_GROUP, TRIGGER_NAME);");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            // Optionally, include the SQL to revert the changes
            migrationBuilder.Sql("-- drop indexes if they exist and rebuild if current ones\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_J] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_JG] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_C] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_G] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_G_J] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_STATE] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_N_STATE] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_N_G_STATE] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_NEXT_FIRE_TIME] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_ST] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_MISFIRE] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_ST_MISFIRE] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_T_NFT_ST_MISFIRE_GRP] ON [dbo].[QRTZ_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_TRIG_INST_NAME] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_INST_JOB_REQ_RCVRY] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_J_G] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_JG] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_T_G] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_TG] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_G_J] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    DROP INDEX IF EXISTS [IDX_QRTZ_FT_G_T] ON [dbo].[QRTZ_FIRED_TRIGGERS];\r\n\r\n    IF OBJECT_ID(N'[dbo].[FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS]', N'F') IS NOT NULL\r\n    ALTER TABLE [dbo].[QRTZ_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS]', N'F') IS NOT NULL\r\n    ALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS]', N'F') IS NOT NULL\r\n    ALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS]', N'F') IS NOT NULL\r\n    ALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] DROP CONSTRAINT [FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS];\r\n    \r\n    IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS]') AND parent_object_id = OBJECT_ID(N'[dbo].[QRTZ_JOB_LISTENERS]'))\r\n    ALTER TABLE [dbo].[QRTZ_JOB_LISTENERS] DROP CONSTRAINT [FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS];\r\n    \r\n    IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS]') AND parent_object_id = OBJECT_ID(N'[dbo].[QRTZ_TRIGGER_LISTENERS]'))\r\n    ALTER TABLE [dbo].[QRTZ_TRIGGER_LISTENERS] DROP CONSTRAINT [FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_CALENDARS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_CALENDARS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_CRON_TRIGGERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_CRON_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_BLOB_TRIGGERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_BLOB_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_FIRED_TRIGGERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_FIRED_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_PAUSED_TRIGGER_GRPS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS];\r\n    \r\n    IF  OBJECT_ID(N'[dbo].[QRTZ_JOB_LISTENERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_JOB_LISTENERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_SCHEDULER_STATE]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_SCHEDULER_STATE];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_LOCKS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_LOCKS];\r\n\r\n    IF OBJECT_ID(N'[dbo].[QRTZ_TRIGGER_LISTENERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_TRIGGER_LISTENERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_JOB_DETAILS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_JOB_DETAILS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_SIMPLE_TRIGGERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_SIMPROP_TRIGGERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS];\r\n    \r\n    IF OBJECT_ID(N'[dbo].[QRTZ_TRIGGERS]', N'U') IS NOT NULL\r\n    DROP TABLE [dbo].[QRTZ_TRIGGERS];");
        }
    }
}
