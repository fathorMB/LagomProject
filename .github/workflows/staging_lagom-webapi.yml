name: Build and Deploy Lagom.WebAPI

on:
  # 1. Run build checks on pull requests into `staging`.
  pull_request:
    branches:
      - staging
    paths:
      - backend/**
    types:
      - opened
      - synchronize
      - reopened
  # 2. Run build + deploy on pushes (including PR merges) to `staging`.
  push:
    branches:
      - staging
    paths:
      - backend/**

jobs:
  build:
    name: Build Lagom.WebAPI
    runs-on: ubuntu-latest

    # Run this job for both PR checks and direct pushes:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build Lagom.WebAPI
        run: dotnet build backend/Lagom/Lagom.WebAPI/Lagom.WebAPI.csproj --configuration Release

      # Optional: add test step here if desired
      # - name: Test Lagom.WebAPI
      #   run: dotnet test backend/Lagom/Lagom.WebAPI/Lagom.WebAPI.csproj --configuration Release

      - name: Publish Lagom.WebAPI
        run: dotnet publish backend/Lagom/Lagom.WebAPI/Lagom.WebAPI.csproj --configuration Release --output ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: lagom-webapi
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    name: Deploy Lagom.WebAPI to Azure Web App
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: build

    # Only run deploy when it's a push to `staging`, not a pull_request event:
    if: ${{ github.event_name == 'push' }}

    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: lagom-webapi

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_0A39880867E04DAE8D75BC4F7761D05C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9771CA8B179240BE8504901C13A9EEE6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9FF71AD7E1AB4D0184F83F053749DCB1 }}

      - name: Update Azure App Settings with DB Connection String
        run: |
          az webapp config appsettings set \
            --name ${{ secrets.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings ConnectionStrings__LagomDBConnectionString="${{ secrets.LAGOM_DB_CONNECTION_STRING }}" ConnectionStrings__SeqEndpoint="${{ secrets.SEQ_ENDPOINT }}" AppSettings__ClientURLOrigin="${{ secrets.STAGING_CLIENT_URL }}" AppSettings__DateTimeProviderHoursOffset=2

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          package: .
